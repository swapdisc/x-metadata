{"name":"beer-song","blurb":"Write a program which produces the lyrics to that beloved classic, that field-trip favorite: 99 Bottles of Beer on the Wall.","description":"Note that not all verses are identical.\n\nThe verse for 1 bottle is as follows:\n\n```plain\n1 bottle of beer on the wall, 1 bottle of beer.\nTake it down and pass it around, no more bottles of beer on the wall.\n```\n\nThe verse for 0 bottles is as follows:\n\n```plain\nNo more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.\n```\n\nYou can get multiple verses by passing in the verse to start from, and (optionally) the last verse to include.\n\n## For bonus points\n\nDid you get the tests passing and the code clean? If you want to, these are some additional things you could try:\n\n* Remove as much duplication as you possibly can.\n* Optimize for readability, even if it means introducing duplication.\n* If you've removed all the duplication, do you have a lot of conditionals? Try applying the _Refactor Conditionals to Strategy Pattern_ refactoring, if it applies in this language. How readable is it?\n\nThen please share your thoughts in a comment on the submission. Did this experiment make the code better? Worse? Did you learn anything from it?\n\n","source":"Learn to Program by Chris Pine","source_url":"http://pine.fm/LearnToProgram/?Chapter=06","expectations":[]}