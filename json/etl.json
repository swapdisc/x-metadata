{"name":"etl","blurb":"We are going to do the `Transform` step of an Extract-Transform-Load.","description":"This is a fancy way of saying, \"We have some crufty, legacy data over in this\nsystem, and now we need it in this shiny new system over here, so we're going\nto migrate this.\"\n\n(Typically, this is followed by, \"We're only going to need to run this once.\"\nThat's then typically followed by much forehead slapping and moaning about\nhow stupid we could possibly be.)\n\nWe're going to extract some scrabble scores from a legacy system.\n\nThe old system stored a list of letters per score:\n\n- 1 point: \"A\", \"E\", \"I\", \"O\", \"U\", \"L\", \"N\", \"R\", \"S\", \"T\",\n- 2 points: \"D\", \"G\",\n- 3 points: \"B\", \"C\", \"M\", \"P\",\n- 4 points: \"F\", \"H\", \"V\", \"W\", \"Y\",\n- 5 points: \"K\",\n- 8 points: \"J\", \"X\",\n- 10 points: \"Q\", \"Z\",\n\nThe shiny new scrabble system instead stores the score per letter,\nwhich makes it much faster and easier to calculate the score for a\nword. It also stores the letters in lower-case regardless of the\ncase of the input letters:\n\n- \"a\" is worth 1 point.\n- \"b\" is worth 3 points.\n- \"c\" is worth 3 points.\n- \"d\" is worth 2 points.\n- Etc.\n\nYour mission, should you choose to accept it, is to write a program that\ntransforms the legacy data format to the shiny new format.\n\nNote that both the old and the new system use strings to represent\nletters, even in languages that have a separate data type for characters.\n","source":"The Jumpstart Lab team","source_url":"http://jumpstartlab.com","expectations":[]}